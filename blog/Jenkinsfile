#!/usr/bin/env groovy

node {
    stage('checkout') {
        checkout scm
    }

    stage('check java') {
        sh "java -version"
    }

    stage('clean') {
        dir('blog') {
            sh "chmod +x mvnw"
            sh "./mvnw -ntp clean -P-webapp"
        }
    }

    stage('nohttp') {
        dir('blog') {
            sh "./mvnw -ntp checkstyle:check"
        }
    }

    stage('install tools') {
        dir('blog') {
            sh "./mvnw -ntp com.github.eirslett:frontend-maven-plugin:install-node-and-npm@install-node-and-npm"
        }
    }

    stage('npm install') {
        dir('blog') {
            sh "./mvnw -ntp com.github.eirslett:frontend-maven-plugin:npm"
        }
    }

    stage('backend tests') {
        dir('blog') {
            try {
                sh "./mvnw -ntp verify -P-webapp"
            } catch(err) {
                throw err
            } finally {
                junit '**/target/surefire-reports/TEST-*.xml,**/target/failsafe-reports/TEST-*.xml'
            }
        }
    }

    stage('frontend tests') {
        dir('blog') {
            try {
                sh "./mvnw -ntp com.github.eirslett:frontend-maven-plugin:npm@npm -Dfrontend.npm.arguments='run test'"
            } catch(err) {
                throw err
            } finally {
                junit '**/target/test-results/TESTS-results-jest.xml'
            }
        }

    stage('packaging') {
        dir('blog') {
            sh "./mvnw -ntp verify -P-webapp -Pprod -DskipTests"
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
    }

    def dockerImage
    stage('publish docker') {
        dir('blog') {
            withCredentials([usernamePassword(credentialsId: 'dockerhub-login', passwordVariable:
                'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]) {
                    sh "./mvnw -ntp jib:build"
            }
        }
    }

}


